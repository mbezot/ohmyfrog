@import './fonts.scss';

//logos
.clients {
  display: flex;
  flex-direction: row;
  justify-content: center;
  flex-wrap: wrap;
  padding-top: 3rem;
  .clientlogo {
    padding: 1rem;
    filter: grayscale(1);
    &:hover {
      filter: none;
    }
  }
}
//card + number
.numbercard {
  display: flex;
  flex-direction: row;
  align-items: center;
  @media (max-width: 800px) {
    .numbercard {
      flex-direction: column;
    }
  }
}

.cta {
  display: flex;
  justify-content: center;
  .ctacontent {
    padding: 3rem;
  }
}
@media (max-width: 800px) {
  .cta {
    flex-direction: column;
  }
}


// grid + flexbox for multiple rows
.card2 {
  display: flex; /* [1] */
  flex-direction: column; /* [2] */
  margin-bottom:2rem;
}

.card2__content {
  flex-grow: 1; /* [3] */
  display: flex; /* [4] */
  flex-direction: column;
  padding: 2rem;
}

/* 1 Making the card as a flexbox wrapper.
  2 The direction is column, which means the card elements are stacked.
  3 Letting the card content expand and fill the remaining space.
  4 Making the card content as a flexbox wrapper.
  5 Finally, using margin-top: auto to push the link down. This will keep it 
  positioned at the end regardless of the card height.*/
